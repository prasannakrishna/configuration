spring.application.name=orderService
server.port = 8084
# Database connection properties
# PostgreSQL DataSource
spring.datasource.url=jdbc:postgresql://localhost:5432/orderdb
spring.datasource.username=prasannakrishnabhagwat
spring.datasource.password=admin123
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# MongoDB
spring.data.mongodb.uri=mongodb://localhost:27017/orderdb
spring.data.mongodb.auto-index-creation=true

# Kafka
kafka.bootstrap-servers=localhost:9092
kafka.topic=order-events

# Kafka Broker Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Consumer Configuration (needed for your Kafka listeners)
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=order-mongo-updater-group # Ensure this matches your consumer group ID
spring.kafka.consumer.auto-offset-reset=earliest # Good for development to read from beginning
spring.kafka.consumer.properties.spring.json.trusted.packages=* # Important for JSON deserialization of your event classes
# --- Inventory Topic Configuration ---
app.kafka.topics.order-events.name=order.events
app.kafka.topics.order-events.partitions=6
app.kafka.topics.order-events.replicas=3
app.kafka.topics.order-events.retention-ms=604800000 # 7 days
app.kafka.topics.order-events.cleanup-policy=delete
#debug=true

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
